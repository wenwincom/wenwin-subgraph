type Lottery @entity {
  " The ID of the lottery (lottery address) "
  id: ID!

  " The number of selected numbers in a ticket combination "
  selectionSize: Int!

  " The maximum number that can be selected in a ticket combination "
  selectionMax: Int!

  " The smallest win tier that has prize (i.e. its prize is equal to the ticket price) "
  swapWinTier: Int!
}

type Ticket @entity {
  " The unique identifier (<lottery address>_<ticket id>) "
  id: ID!

  " The ID of the ticket "
  ticketId: BigInt

  " The address of the ticket owner "
  owner: String!

  " The draw the ticket belongs to "
  draw: Draw!

  " The ticket combination "
  combination: [Int!]!

  " Whether the ticket has been claimed "
  isClaimed: Boolean!
}

type Draw @entity {
  " The unique identifier (<lottery address>_<draw id>)"
  id: ID!

  " The ID of the draw "
  drawId: BigInt!

  " The timestamp of the draw finalization "
  scheduledTimestamp: BigInt!

  " The winning ticket for the draw "
  winningTicket: [Int!]

  " The prizes per tier (from lower to higher tier) for the draw "
  prizesPerTier: [BigInt!]!

  " The number of distinct players for the draw "
  numberOfPlayers: BigInt!

  " The list of addresses of the players for the draw "
  players: [String!]!

  " The list of winners per tier for the draw "
  numberOfWinnersPerTier: [BigInt!]!

  " The number of tickets sold for the draw "
  numberOfSoldTickets: BigInt!

  " The tickets IDs for the draw "
  tickets: [BigInt!]!
}
